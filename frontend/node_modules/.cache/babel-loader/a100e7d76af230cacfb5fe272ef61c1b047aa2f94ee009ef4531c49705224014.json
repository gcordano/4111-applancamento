{"ast":null,"code":"var _jsxFileName = \"/Users/gustavo/Documents/GitHub/4111/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setToken\n}) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8000/auth.php\", {\n        email,\n        password\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Resposta do backend:\", response.data);\n      // Salva o token no Local Storage\n      localStorage.setItem(\"token\", response.data.token);\n      alert(\"Login realizado com sucesso!\");\n      window.location.href = \"/files\"; // Redireciona para a página de files\n    } catch (error) {\n      var _error$response;\n      console.error(\"Erro no login:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert(\"Login falhou! Verifique suas credenciais.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"E-mail\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Senha\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","setToken","_s","email","setEmail","password","setPassword","handleLogin","e","preventDefault","response","post","headers","console","log","data","localStorage","setItem","token","alert","window","location","href","error","_error$response","message","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gustavo/Documents/GitHub/4111/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Login({ setToken }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\n        \"http://localhost:8000/auth.php\",\n        { email, password },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n  \n      console.log(\"Resposta do backend:\", response.data);\n      // Salva o token no Local Storage\n      localStorage.setItem(\"token\", response.data.token);\n  \n      alert(\"Login realizado com sucesso!\");\n      window.location.href = \"/files\"; // Redireciona para a página de files\n    } catch (error) {\n      console.error(\"Erro no login:\", error.response?.data || error.message);\n      alert(\"Login falhou! Verifique suas credenciais.\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleLogin}>\n      <input\n        type=\"email\"\n        placeholder=\"E-mail\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Senha\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,gCAAgC,EAChC;QAAER,KAAK;QAAEE;MAAS,CAAC,EACnB;QACEO,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAEDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MAClD;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,QAAQ,CAACK,IAAI,CAACG,KAAK,CAAC;MAElDC,KAAK,CAAC,8BAA8B,CAAC;MACrCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdX,OAAO,CAACU,KAAK,CAAC,gBAAgB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACb,QAAQ,cAAAc,eAAA,uBAAdA,eAAA,CAAgBT,IAAI,KAAIQ,KAAK,CAACE,OAAO,CAAC;MACtEN,KAAK,CAAC,2CAA2C,CAAC;IACpD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAM2B,QAAQ,EAAEnB,WAAY;IAAAoB,QAAA,gBAC1B5B,OAAA;MACE6B,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,QAAQ;MACpBC,KAAK,EAAE3B,KAAM;MACb4B,QAAQ,EAAGvB,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrC,OAAA;MACE6B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAGvB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACwB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFrC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAAClC,EAAA,CA9CQF,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAgDd,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}